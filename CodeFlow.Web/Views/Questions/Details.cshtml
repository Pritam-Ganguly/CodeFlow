@model DetailsViewModel

@{
    ViewData["Title"] = Model.Question!.Title;
}

<div class="container mt-4">
    <div class="so-question-card mb-4">
        <div class="so-question-body row">
            <div class="row">
                <div class="col-12 so-question-title">@Model.Question.Title</div>
            </div>
            <div class="row justify-content-start">
                <div class="col-6 so-postdate">
                    Asked on @Model.Question.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt") by <strong>@Model.Question.User?.DisplayName</strong>
                </div>
                @if (Model.Question.IsAuthor)
                {
                    <div class="col-1 offset-5">
                        <a class="text-decoration-none" asp-controller="Questions" asp-action="Edit" asp-route-id="@Model.Question.Id">
                            <i class="fas fa-pen-to-square text-opacity-50" style="color: cadetblue"></i>
                        </a>
                    </div>
                }
            </div>
            <hr />
            <div class="col-1">
                @if (!User.Identity!.IsAuthenticated)
                {
                    <a class="text-decoration-none" asp-controller="Account" asp-action="Login">
                        <i class="fa-solid fa-caret-up fa-2x text-muted"></i>
                    </a>
                    <div class="score fs-5 fw-bold my-1 ps-1" id="question-score-@Model.Question.Id">@Model.Question.Score</div>
                    <a class="text-decoration-none" asp-controller="Account" asp-action="Login">
                        <i class="fas fa-caret-down fa-2x text-muted"></i>
                    </a>
                }
                else if (!Model.Question.IsAuthor)
                {
                    <a href="#" class="vote-link" data-type="question" data-id="@Model.Question.Id" data-vote="1">
                        <i class="fa-solid fa-caret-up fa-2x" style="color:@(Model.Question.CurrentVote == 1 ? "grey" : "lightgrey")"></i>
                    </a>
                    <div class="score fs-5 fw-bold my-1 ps-1" id="question-score-@Model.Question.Id">@Model.Question.Score</div>
                    <a href="#" class="vote-link" data-type="question" data-id="@Model.Question.Id" data-vote="-1">
                        <i class="fas fa-caret-down fa-2x" style="color:@(Model.Question.CurrentVote == -1 ? "grey" : "lightgrey")"></i>
                    </a>
                }
            </div>
            <div class="col-10 pb-5">
                <div class="question-body">
                    @Model.Question.Body
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-12 mt-2 mb-3">
                    @foreach (var tag in Model.Question.Tags)
                    {
                        <span class="so-question-badge badge bg-light text-dark">@tag.Name</span>
                    }
                </div>
            </div>
        </div>
    </div>

    <h2>@(Model.Answers.Count()) @(Model.Answers.Count() == 1 ? "Answer" : " Answers")</h2>
    <hr />
    @if (Model.Answers.Any())
    {
        var answers = Model.Answers;
        answers = answers.OrderByDescending(a => a.IsAccepted).ThenByDescending(a => a.CreatedAt);
        foreach (var answer in answers)
        {
            <div class="card mb-3">
                <div class="card-body row">
                    <div class="col-1">
                        @if (!User.Identity!.IsAuthenticated)
                        {
                            <a class="text-decoration-none" asp-controller="Account" asp-action="Login">
                                <i class="fa-solid fa-caret-up fa-2x text-muted"></i>
                            </a>
                            <div class="score fs-5 fw-bold my-1 ps-1" id="answer-score-@answer.Id">@answer.Score</div>
                            <a class="text-decoration-none" asp-controller="Account" asp-action="Login">
                                <i class="fas fa-caret-down fa-2x text-muted"></i>
                            </a>
                        }
                        else if(!answer.IsAuthor)
                        {
                            <a href="#" class="vote-link text-decoration-none" data-type="answer" data-id="@answer.Id" data-vote="1">
                                <i class="fa-solid fa-caret-up fa-2x" style="color:@(answer.CurrentVote == 1 ? "grey" : "lightgrey")"></i>
                            </a>
                            @if (answer.IsAccepted)
                            {
                                <a href="#" class="text-decoration-none" data-type="answer" data-id="@answer.Id" data-vote="-1">
                                    <i class="fas fa-check fa-2x" style="color: forestgreen"></i>
                                </a>
                            }
                            <div class="score fs-5 fw-bold my-1 ps-1" id="answer-score-@answer.Id">@answer.Score</div>
                            <a href="#" class="vote-link text-decoration-none" data-type="answer" data-id="@answer.Id" data-vote="-1">
                                <i class="fas fa-caret-down fa-2x" style="color:@(answer.CurrentVote == -1 ? "grey" : "lightgrey")"></i>
                            </a>

                            @if (!answer.IsAccepted && Model.Question.IsAuthor)
                            {
                                <form asp-controller="Questions"
                                      asp-action="AcceptAnswer"
                                      asp-route-answerId="@answer.Id"
                                      method="post"
                                      class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="so-accept-button text-decoration-none" title="Accept answer">
                                        <i class="fas fa-check fa-2x" style="color: cadetblue"></i>
                                    </button>
                                </form>
                            }
                        }
                    </div>
                    <div class="col-10 answer-body">
                        <span id="answer-body-@answer.Id">@answer.Body</span>
                        <form id="answer-form-@answer.Id" asp-controller="Questions" asp-action="EditAnswer" asp-route-Id ="@answer.Id" style="display:none">
                            @Html.AntiForgeryToken()
                            <div class="form-group mb-3">
                                <textarea name="body" class="form-control" rows="6">@answer.Body</textarea>
                                @if (ViewData.ModelState["body"]?.Errors.Count > 0)
                                {
                                    <span class="text-danger">@ViewData.ModelState["body"]?.Errors.First().ErrorMessage</span>
                                }
                                else if (ViewData.ModelState[string.Empty]?.Errors.Count > 0)
                                {
                                    <span class="text-danger">@ViewData.ModelState[string.Empty]?.Errors.First().ErrorMessage</span>
                                }
                            </div>
                            <div class="form-group">
                                <input class="btn btn-primary" type="submit" value="Update" />
                                <button class="btn btn-secondary" onclick="handleClose(@answer.Id)">Cancel</button>
                            </div>
                        </form>
                    </div>
                    @if(!answer.IsAccepted && answer.IsAuthor)
                    {
                        <div class="col-2">
                            <a href="javascript:void(0);" class="text-decoration-none" onclick="handleOpen(@answer.Id)">
                                <i class="fas fa-pen-to-square text-opacity-50" style="color: cadetblue"></i>
                            </a>
                        </div>
                    }
                    <div class="col-md-7 offset-md-6 text-muted mt-2 justify-content-end so-postdate">
                        Answered by <strong>@answer.User?.DisplayName</strong> on @answer.CreatedAt.ToString("MMM dd, yyyy")

                        @if (answer.IsAccepted)
                        {
                            <span class="badge bg-success ms-2">Accepted</span>
                        }
                    </div>
                </div>
            </div>
        }        
    }
    else
    {
        <p class="text-muted">No answers yet. Be the first to answer</p>
    }
</div>
<div class="mt-5">
    <h3>You're Answer</h3>
    <form asp-action="Answer" asp-route-id="@Model.Question.Id" method="post">
        @Html.AntiForgeryToken()

        <div class="form-group mb-3">
            <textarea name="body" class="form-control" rows="6" placeholder="Explain your answer in details..."></textarea>
            @if(ViewData.ModelState["body"]?.Errors.Count > 0)
            {
                <span class="text-danger">@ViewData.ModelState["body"]?.Errors.First().ErrorMessage</span>
            }
            else if(ViewData.ModelState[string.Empty]?.Errors.Count > 0)
            {
                <span class="text-danger">@ViewData.ModelState[string.Empty]?.Errors.First().ErrorMessage</span>
            }
        </div>

        <div class="form-group">
            <input class="btn btn-primary" type="submit" value="Post your answer"/>
        </div>
    </form>

    @section Scripts {
        <script>
            function handleOpen(id){
                document.getElementById(`answer-body-${id}`).style.display = "none";
                document.getElementById(`answer-form-${id}`).style.display = "block";
            }

            function handleClose(id){
                document.getElementById(`answer-body-${id}`).style.display = "block";
                document.getElementById(`answer-form-${id}`).style.display = "none";
            }

            document.addEventListener('DOMContentLoaded', function () {
                        document.querySelectorAll('.vote-link').forEach((link, i) => {
                            link.addEventListener('click', async function (e) {
                                e.preventDefault();

                                const type = this.dataset.type;
                                const id = parseInt(this.dataset.id);
                                const vote = parseInt(this.dataset.vote);

                                if(vote == 1){
                                    document.querySelectorAll('.vote-link')[i].getElementsByTagName('i')[0].style.color = 'grey';
                                    document.querySelectorAll('.vote-link')[i+1].getElementsByTagName('i')[0].style.color = 'lightgrey';
                                }
                                else {
                                    document.querySelectorAll('.vote-link')[i].getElementsByTagName('i')[0].style.color = 'grey';
                                    document.querySelectorAll('.vote-link')[i-1].getElementsByTagName('i')[0].style.color = 'lightgrey';
                                }

                                try {
                                    const response = await fetch(`/Votes/${type}?${type}Id=${id}&voteType=${vote}`, {
                                        method: 'POST',
                                        headers: {
                                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                        }
                                    });

                                    if (response.ok) {
                                        const result = await response.json();
                                        console.log(result);
                                        document.getElementById(`${type}-score-${id}`).textContent = result.newScore;
                                    } else {
                                        alert('Failed to register vote. You may have already voted.');
                                    }
                                } catch (error) {
                                    console.error('Error:', error);
                                    alert('An error occurred while voting.');
                                }
                            });
                        });
                    });
        </script>
    }

</div>


